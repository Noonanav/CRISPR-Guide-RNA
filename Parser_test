import numpy as np
from Bio.Alphabet import generic_dna
from Bio import SeqIO
from Bio.Seq import Seq
import argparse
from Cas9_Calculator import *
from argparse import RawTextHelpFormatter


#Parser to get the files listed in the arguments

#Creating the parser
parser = argparse.ArgumentParser(description="""This program helps you to find all possible guide RNAs that will \ntarget the gene. Then using the model created by Salis Lab, \nyou can see the off target effects for the each possible guide.""", formatter_class=RawTextHelpFormatter)

#Parsers to add arguements.
parser.add_argument("-t", "--target_sequence", required=True, help= "The Gene Sequence of Interest (Fasta or Genebank)")
parser.add_argument("-g", "--genome_sequence", required=True, nargs = '+', help= "The Genome of the organism, if targeting a plasmid, make sure to \n include it as well (Fasta or Genebank)")
parser.add_argument("-k", "--kind", required=False, help= " a: CRISPR activation \n i: CRISPR interference \n Leave Blank to see all possible off target effects of your sequence")

#Creating a variable to make the values easily accessible
args = parser.parse_args()

# Returns the upper case sequences as strings from the files given as arguments. Also combines the various genome sequences
def Get_Sequence():

    #Target = SeqIO.read(args.target_sequence, args.target_sequence.split('.')[-1:])
    Genome = args.genome_sequence[0].split('.')[1]

    print(Genome)

Get_Sequence()
